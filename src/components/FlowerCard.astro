---
interface Props {
  flower: {
    name: string;
    description: string;
    image: string;
    season: string;
    type: string;
  };
}

const { flower } = Astro.props;
const slug = flower.name.toLowerCase().replace(/\s+/g, '-');
const imageName = flower.name.toLowerCase().replace(/\s+/g, '_');
const imageUrl = `../images/${imageName === 'daisy' ? 'daisies' : imageName === 'marigold' ? 'marigolds' : imageName === 'black-eyed_susan' ? 'black_eyed_susan' : imageName === 'tulip' ? 'tulips' : imageName === 'cherry_blossom' ? 'placeholder' : imageName}.jpg`;
---

<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden transform hover:scale-[1.02] transition-transform duration-200">
  <a href={`/flowers/${slug}`} class="block">
    <div class="relative">
      <img 
        src={imageUrl}
        alt={flower.name}
        class="w-full h-48 object-cover"
        loading="lazy"
      />
      <div class="absolute inset-0 bg-gradient-to-t from-black/50 to-transparent"></div>
    </div>
    <div class="p-6">
      <h3 class="text-xl font-semibold mb-2">{flower.name}</h3>
      <p class="text-gray-600 dark:text-gray-400 mb-4">{flower.description}</p>
      <div class="flex gap-2">
        <span class="px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-100 rounded-full text-sm">
          {flower.season}
        </span>
        <span class="px-3 py-1 bg-secondary-100 dark:bg-secondary-900 text-secondary-800 dark:text-secondary-100 rounded-full text-sm">
          {flower.type}
        </span>
      </div>
    </div>
  </a>
</div>
